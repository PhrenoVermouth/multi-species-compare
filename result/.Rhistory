hum_diff_tran <- c(1,1,1,1,1)
for(i in 1:6){
a <- sort(homolog[which(homolog$Hum %in% as.character(hum_diff[,i])),]$Rat)
hum_diff_tran <- qpcR:::cbind.na(hum_diff_tran,a)
}
hum_diff_tran <- hum_diff_tran[,c(2:7)]
colnames(hum_diff_tran) <- colnames(hum_diff)
macaca_diff_tran <- c(1,1,1,1,1)
for(i in 1:2){
a <- sort(homolog[which(homolog$Macaca %in% as.character(macaca_diff[,i])),]$Rat)
macaca_diff_tran <- qpcR:::cbind.na(macaca_diff_tran,a)
}
macaca_diff_tran <- macaca_diff_tran[,c(2:3)]
colnames(macaca_diff_tran) <- c("macaca_ko_up","macaca_ko_down")
macaca_diff_tran
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- matrix(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = length(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
}
}
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
result_mat
intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]）
intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])
intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))
View(all_species_diff)
setwd("/Volumes/Mac_Workplace/Mac_WorkSpace/leptin/all")
library(DESeq2)
library(ggplot2)
library(reshape2)
library(Rtsne)
#library(scatterplot3d)
#library(rgl)
library(stringr)
library(ggsci)
library(data.table)
library(pheatmap)
library(dplyr)
#library(WGCNA)
library(qpcR)
########################################
################# pre-define functions
########################################
gran_theme <- theme_classic() +
theme(legend.title =element_blank(),legend.text = element_text(size = 12, face = "bold"),axis.title =element_text(size=12,face = "bold") ,axis.text=element_text(size=12))
depict_vol_plot <- function(deseq2_res,pass_title){
deseq2_res <- na.omit(as.data.frame(deseq2_res)) ###Exclude lines with 'NA' qvalue.
significant <- c()
for (i in row.names(deseq2_res))
if (deseq2_res[i,"log2FoldChange"] >log2(1.5) && deseq2_res[i,"padj"] < 0.05) {
significant = c(significant,"up")} else if (deseq2_res[i,"log2FoldChange"] < -log2(1.5) && deseq2_res[i,"padj"] < 0.05){
significant = c(significant,"down")} else{
significant = c(significant,"non")}
depict_matrix <- cbind(deseq2_res,significant)
depict_matrix <- depict_matrix[which(abs(depict_matrix$log2FoldChange) <=  10,),]
depict_matrix <- depict_matrix[which(abs(depict_matrix$padj) >= 1e-50,),]
volcano <- ggplot(depict_matrix, aes(x= log2FoldChange, y= -1*log10(padj)))
volcano+geom_point(aes(color=significant))+
scale_color_manual(values =c("#4DBBD5B2","grey","#E64B35B2"))+
labs(title=pass_title,x="log2(fold change)", y="-log10(adj.pvalue)")+
geom_hline(yintercept=1.3,linetype=3)+geom_vline(xintercept=c(-0.585,0.585),linetype=3)+
gran_theme + theme(legend.position='none',plot.title = element_text(hjust = 0.5,size=12,face = "bold"))
}
depict_point_plot <- function(expr_cols,high_list,low_list,pass_title){ ###Notice: expr_cols - WT_KO
significant <- rep(0,nrow(expr_cols))
depict_matrix <- cbind(expr_cols,significant)
depict_matrix[high_list,]$significant <- "high"
depict_matrix[low_list,]$significant <- "low"
depict_matrix[which(depict_matrix$significant == "0"),]$significant <- "not_sign"
depict_matrix$significant <- factor(depict_matrix$significant,levels = c("low","not_sign","high"))
point <- ggplot(depict_matrix, aes(x=depict_matrix[,1], y= depict_matrix[,2]))
point + geom_point(aes(color=significant))+
scale_color_manual(values =c("green3","grey","firebrick2"))+
labs(title=pass_title,x="Normalized counts of WT", y="Normalized counts of KO")+
gran_theme + theme(legend.position='none',plot.title = element_text(hjust = 0.5,size=14,face = "bold"))
}
david2gp <- function(csv,title_def) {
csv <- read.csv(paste0("./all_go/",csv),header = T,col.names = c("Cate","Desc.","Pvalue","LogPvalue","dir"))
p <- ggplot(csv) + geom_bar(aes(x=reorder(Desc.,LogPvalue),y=LogPvalue),stat = "identity",fill="#4DBBD5B2")+coord_flip()
p <- p + theme(panel.grid.major =element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title = element_text(),
axis.text = element_text(size=14),
axis.line.x = element_line(colour = "black"),
axis.title.x = element_text(size = 14,  face = "bold"),
axis.title.y = element_text(size = 14, face = "bold"),
axis.ticks.y = element_blank()) +scale_y_continuous(expand = c(0, 0))+ xlab("Terms")+
labs(title=title_def)+ theme(plot.title = element_text(hjust = 0.5,size=14,face = "bold"))
return(p)
}
########################################
#################### Set-up
########################################
inflam_geneset <- as.character(read.csv("positive_regulation_of_inflammatory_response.txt",col.names = "V1")$V1)
fat_geneset <- as.character(read.csv("fatty_acid_biosynthetic_process.txt",col.names = "V1")$V1)
rawmat1 <- read.csv("4_8_16_merge_geneCounts_featureCounts_hisat2.txt",sep="\t",header=T)
rawmat1 <- rawmat1[!duplicated(rawmat1[,1]),]
rownames(rawmat1) <- rawmat1$X.id
rawmat1 <- rawmat1[,-1]
rawmat2 <- read.csv("new_rat_counts.txt",sep="\t",header=T)
rawmat2 <- rawmat2[!duplicated(rawmat2[,1]),]
rownames(rawmat2) <- rawmat2$X.id
rawmat2 <- rawmat2[,-1]
rawmat <- cbind(rawmat1,rawmat2)
coldata <- read.csv("coldata.csv",row.names = 1,header = T,strip.white = T)
all(rownames(coldata) %in% colnames(rawmat))
all(rownames(coldata) == colnames(rawmat))
rawmat <- rawmat[,rownames(coldata)]
all(rownames(coldata) == colnames(rawmat))
####################Deseq
dds <- DESeqDataSetFromMatrix(countData = rawmat,colData = coldata,design = ~ condition)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]
#dds$condition <- relevel(dds$condition, ref = "untreated")
dds <- DESeq(dds)
res <- results(dds) #FDR=0.1 by default
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > 1, na.rm = TRUE)
rlog <- rlog(dds,blind=F)
##################Normalized matrix
normat <- counts(dds,normalized=T)
normat <- log2(counts(dds,normalized=T)+1)
mean_normat <- data.frame(gene=rownames(normat))
rep_class <- levels(factor(str_sub(colnames(normat),1,-2)))
for(i in rep_class){
mean_normat <- cbind(mean_normat,apply(normat[,grep(paste0(i,"."),colnames(normat))],1,mean))
}
colnames(mean_normat) <- c('gene',rep_class)
mean_normat <- mean_normat[,-1][,c("W4_WT","W8_WT","W16_WT","W32_WT","W48_WT","W4_KO","W8_KO","W16_KO","W32_KO","W48_KO")]
res <- results(dds,contrast=c("condition","W4_KO","W4_WT"))
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > log2(1.5) & res$padj < 0.05, na.rm = TRUE)
diff_w4_up <- rownames(res[which((res$log2FoldChange) > log2(1.5) & res$padj < 0.05),])
diff_w4_down <- rownames(res[which((res$log2FoldChange) < log2(1/1.5)  & res$padj < 0.05),])
res <- results(dds,contrast=c("condition","W8_KO","W8_WT"))
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > log2(1.5) & res$padj < 0.05, na.rm = TRUE)
diff_w8_up <- rownames(res[which((res$log2FoldChange) > log2(1.5) & res$padj < 0.05),])
diff_w8_down <- rownames(res[which((res$log2FoldChange) < log2(1/1.5)  & res$padj < 0.05),])
res <- results(dds,contrast=c("condition","W16_KO","W16_WT"))
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > log2(1.5) & res$padj < 0.05, na.rm = TRUE)
diff_w16_up <- rownames(res[which((res$log2FoldChange) > log2(1.5) & res$padj < 0.05),])
diff_w16_down <- rownames(res[which((res$log2FoldChange) < log2(1/1.5)  & res$padj < 0.05),])
res <- results(dds,contrast=c("condition","W32_KO","W32_WT"))
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > log2(1.5) & res$padj < 0.05, na.rm = TRUE)
diff_w32_up <- rownames(res[which((res$log2FoldChange) > log2(1.5) & res$padj < 0.05),])
diff_w32_down <- rownames(res[which((res$log2FoldChange) < log2(1/1.5)  & res$padj < 0.05),])
res <- results(dds,contrast=c("condition","W48_KO","W48_WT"))
resOrdered <- res[order(res$padj),]
sum(abs(res$log2FoldChange) > log2(1.5) & res$padj < 0.05, na.rm = TRUE)
diff_w48_up <- rownames(res[which((res$log2FoldChange) > log2(1.5) & res$padj < 0.05),])
diff_w48_down <- rownames(res[which((res$log2FoldChange) < log2(1/1.5)  & res$padj < 0.05),])
diff_up <- unique(c(diff_w4_up,diff_w8_up,diff_w16_up,diff_w32_up,diff_w48_up))
diff_down <- unique(c(diff_w4_down,diff_w8_down,diff_w16_down,diff_w32_down,diff_w48_down))
de_genes <- unique(c(diff_up,diff_down))
two_geneset <- as.data.frame(rbind(inflam_normat,fat_normat))
two_geneset$cate <- rep(c("inflam","fat"),c(dim(inflam_normat)[1],dim(fat_normat)[1]))
two_geneset$gene <- rownames(two_geneset)
inflam_normat <- mean_normat[which(rownames(mean_normat) %in% de_genes),]
inflam_normat <- inflam_normat[which(rownames(inflam_normat) %in% inflam_geneset),]
inflam_normat <- t(apply(inflam_normat,1, function(x) (x-mean(x))/sd(x)))
fat_normat <- mean_normat[which(rownames(mean_normat) %in% de_genes),]
fat_normat <- fat_normat[which(rownames(fat_normat) %in% fat_geneset),]
fat_normat <- t(apply(fat_normat,1, function(x) (x-mean(x))/sd(x)))
a = pheatmap(inflam_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F)
ggsave("inflam_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 4)
?pheatmap
a = pheatmap(inflam_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F,fontsize_row =12)
a = pheatmap(inflam_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F,fontsize_row =10)
ggsave("inflam_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 4)
a = pheatmap(inflam_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F,fontsize_row =5)
ggsave("inflam_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 4)
a = pheatmap(inflam_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F,fontsize_row =6,fontsize_col =8)
ggsave("inflam_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 4)
fat_normat <- mean_normat[which(rownames(mean_normat) %in% de_genes),]
fat_normat <- fat_normat[which(rownames(fat_normat) %in% fat_geneset),]
fat_normat <- t(apply(fat_normat,1, function(x) (x-mean(x))/sd(x)))
a=pheatmap(fat_normat,cluster_cols = F,cluster_rows = F,border_color = NA,legend = F,fontsize_row =6,fontsize_col =8)
#ggsave("fat_geneset_heatmap.png"",a$gtable,dpi=300,width = 3,height = 6)
ggsave("fat_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 4)
#ggsave("fat_geneset_heatmap.png"",a$gtable,dpi=300,width = 3,height = 6)
ggsave("fat_geneset_heatmap.pdf",a$gtable,dpi=300,width = 3,height = 5)
###############################################
################################ Mean_dataframe
###############################################
inflam_mean <- c(apply(inflam_normat,2, mean))
fat_mean <- apply(fat_normat,2, mean)
two_geneset_mean <- data.frame(rbind(inflam_mean,fat_mean))
two_geneset_mean$cate <- c("inflam","fat")
two_geneset_mean<-melt(
two_geneset_mean,                                      #待转换的数据集名称
id.vars=c("cate"),  #要保留的主字段
variable.name="name",         #转换后的分类字段名称（维度）
value.name="expr"            #转换后的度量值名称
)
two_geneset_mean$time <- factor(str_split_fixed(two_geneset_mean$name,"_",2)[,1],levels = c("W4","W8","W16","W32","W48"))
two_geneset_mean$treat <- str_sub(str_split_fixed(two_geneset_mean$name,"_",2)[,2],1,2)
two_geneset_mean
two_geneset
two_geneset <- as.data.frame(rbind(inflam_normat,fat_normat))
two_geneset$cate <- rep(c("inflam","fat"),c(dim(inflam_normat)[1],dim(fat_normat)[1]))
two_geneset$gene <- rownames(two_geneset)
two_geneset<-melt(
two_geneset,                                      #待转换的数据集名称
id.vars=c("cate","gene"),  #要保留的主字段
variable.name="name",         #转换后的分类字段名称（维度）
value.name="expr"            #转换后的度量值名称
)
two_geneset$time <- factor(str_split_fixed(two_geneset$name,"_",2)[,1],levels = c("W4","W8","W16","W32","W48"))
two_geneset$treat <- str_sub(str_split_fixed(two_geneset$name,"_",2)[,2],1,2)
two_geneset
write.csv(two_geneset,"two_geneset_for_LP.csv",quote = F)
diff_w16_up
nash_up
#把重合最多（应该是16周）的gene list找出来
unique(intersect(diff_w16_up,nash_up),intersect(diff_w16_down,nash_down))
intersect(diff_w16_up,nash_up)
intersect(diff_w16_down,nash_down)
#把重合最多（应该是16周）的gene list找出来
unique(c(intersect(diff_w16_up,nash_up),intersect(diff_w16_down,nash_down)))
c(intersect(diff_w16_up,nash_up),intersect(diff_w16_down,nash_down))
length(diff_w16_up)
length(all_species_diff[,"diff_w16_up"])
length(nash_up)
length(all_species_diff[,"NASH_UP"])
length(all_species_diff[,"NASH_up"])
#把重合最多（应该是16周）的gene list找出来
unique(c(intersect(diff_w16_up,all_species_diff[,"NASH_up"]),intersect(diff_w16_down,all_species_diff[,"NASH_down"])))
c(intersect(diff_w16_up,all_species_diff[,"NASH_up"]),intersect(diff_w16_down,all_species_diff[,"NASH_down"]))
all_species_diff[,"NASH_up"]
unique(c(intersect(diff_w16_up,all_species_diff[,"NASH_up"]),intersect(diff_w16_down,all_species_diff[,"NASH_down"])))
result_up_mat + result_down_mat
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- matrix(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = length(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
}
}
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
result_up_mat <- result_mat[grep("up",rownames(result_mat)),grep("up",rownames(result_mat))]
rownames(result_up_mat) <- colnames(result_up_mat) <- rownames(result_mat[grep("up",rownames(result_mat)),grep("up",rownames(result_mat))])
result_down_mat <- result_mat[grep("down",rownames(result_mat)),grep("down",rownames(result_mat))]
rownames(result_down_mat) <- colnames(result_down_mat) <- rownames(result_mat[grep("down",rownames(result_mat)),grep("down",rownames(result_mat))])
result_up_mat + result_down_mat
result_up_mat
intersect(diff_w16_up,all_species_diff[,"NASH_up"])
intersect(diff_w16_down,all_species_diff[,"NASH_down"]))
intersect(diff_w16_down,all_species_diff[,"NASH_down"])
result_down_mat
#把重合最多（应该是16周）的gene list找出来
unique(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"])))
na.omit(unique(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"]))))
length(na.omit(unique(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"])))))
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- matrix(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = length(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))))
}
}
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
write.csv(result_mat,"all_species_up_down_mat.csv",quote=F)
result_up_mat <- result_mat[grep("up",rownames(result_mat)),grep("up",rownames(result_mat))]
rownames(result_up_mat) <- colnames(result_up_mat) <- rownames(result_mat[grep("up",rownames(result_mat)),grep("up",rownames(result_mat))])
result_down_mat <- result_mat[grep("down",rownames(result_mat)),grep("down",rownames(result_mat))]
rownames(result_down_mat) <- colnames(result_down_mat) <- rownames(result_mat[grep("down",rownames(result_mat)),grep("down",rownames(result_mat))])
write.csv(result_up_mat + result_down_mat,"all_species_mat.csv",quote=F)
setwd("/Volumes/Mac_Workplace/Mac_WorkSpace/leptin/multi-species-compare/")
#把重合最多（应该是16周）的gene list找出来
unique(na.omit(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"]))))
#把重合最多（应该是16周）的gene list找出来
unique(na.omit(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"]))))
#把小鼠最多的gene list找出来（最好从别人文章上找，免得基因不一样。)
unique(na.omit(c(intersect(all_species_diff[,"MCD8_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"MCD8_down"],all_species_diff[,"NASH_down"]))))
intersect(a,b)
#把重合最多（应该是16周）的gene list找出来
a <- unique(na.omit(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"]))))
#把小鼠最多的gene list找出来（最好从别人文章上找，免得基因不一样。)
b <- unique(na.omit(c(intersect(all_species_diff[,"MCD8_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"MCD8_down"],all_species_diff[,"NASH_down"]))))
intersect(a,b)
#把重合最多（应该是16周）的gene list找出来
a <- sort(unique(na.omit(c(intersect(all_species_diff[,"diff_w16_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"diff_w16_down"],all_species_diff[,"NASH_down"])))))
#把小鼠最多的gene list找出来（最好从别人文章上找，免得基因不一样。)
b <- sort(unique(na.omit(c(intersect(all_species_diff[,"MCD8_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"MCD8_down"],all_species_diff[,"NASH_down"])))))
intersect(a,b)
a
b
#猴子
c <- sort(unique(na.omit(c(intersect(all_species_diff[,"macaca_ko_up"],all_species_diff[,"NASH_up"]),intersect(all_species_diff[,"macaca_ko_down"],all_species_diff[,"NASH_down"])))))
c
pheatmap(rat[intersect(a,b),])
pheatmap(rat[intersect(a,b),],cluster_cols = F)
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- matrix(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
}
}
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- matrix(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
}
}
na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
result_mat[i,j] = na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
result_mat[i,j] = as.character(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))))
result_mat[i,j] = c("111","222")
result_mat[i,j] = c("111")
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
}
}
na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
result_mat[i,j] = na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j])))
result_mat[i,j] = c('1','2')
result_mat[i,j] = paste(c('1','2'))
paste(c('1','2'))
paste0(c('1','2'))
paste0(1:12, c("st", "nd", "rd", rep("th", 9)))
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = '')
}
}
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
View(result_mat)
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = ' ')
}
}
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
rownames(result_mat)
colnames(result_mat)
colnames(all_species_diff)
result_mat <- result_mat[1:36,1:36]
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = ',')
}
}
result_mat <- result_mat[1:36,1:36]
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
write.csv(result_mat,"all_species_genes_up_down_mat.csv",quote=F)
paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = ',')
write.csv(result_mat,"all_species_genes_up_down_mat.txt",quote=F,sep="\t")
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = ';')
}
}
result_mat <- result_mat[1:36,1:36]
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
#############Intersect genes within 3 species
all_species_diff <- qpcR:::cbind.na(hum_diff_tran,rat_diff,mouse_diff,macaca_diff_tran)
result_mat  <- data.frame(rep(0,1156),nrow=36,ncol=36)
for(i in 1:ncol(all_species_diff)){
for(j in 1:ncol(all_species_diff)){
result_mat[i,j] = paste(na.omit(intersect(as.character(all_species_diff[,i]),as.character(all_species_diff[,j]))),collapse = ';')
}
}
result_mat <- result_mat[1:36,1:36]
colnames(result_mat) <- rownames(result_mat) <- colnames(all_species_diff)
write.csv(result_mat,"all_species_genes_up_down_mat.txt",quote=F)
#####Read in rat pathway
kegg = data.frame(name="test",source="test")
for(i in c("w16_KO.txt","w32_KO.txt","w48_KO.txt","w48_WT.txt","w4_KO.txt","w8_KO.txt",
"w16_WT.txt","w32_WT.txt","w4_WT.txt","w8_WT.txt")){
len = length(as.character(read.csv(paste0("gsea/result/",i),sep="\t",header=F)$V1))
kegg = rbind(kegg,data.frame(name=as.character(read.csv(paste0("gsea/result/",i),sep="\t",header=F)$V1),source=rep(str_split_fixed(i,".txt",2)[1],len)))
}
kegg <- kegg[c(2:272),]
kegg$name <- str_replace_all(str_sub(kegg$name,6),"_"," ")
library(tidyr)
kegg$tag <- rownames(kegg)
kegg <- spread(kegg,source,name)
kegg <- kegg[,c(2:11)]
colnames(kegg) <- gsub("KO","up",colnames(kegg))
colnames(kegg) <- gsub("WT","down",colnames(kegg))
kegg_hum_mouse <- read.csv("liter_kegg_hum_mouse.csv",header=T)
hum_kegg <- kegg_hum_mouse[,c(1:6)]
mouse_kegg <- kegg_hum_mouse[,c(7:24)]
#############Intersect genes within 3 species
all_species_kegg <- qpcR:::cbind.na(hum_kegg,kegg,mouse_kegg)
result_mat_kegg  <- matrix(rep(0,1156),nrow=34,ncol=34)
for(i in 1:ncol(all_species_kegg)){
for(j in 1:ncol(all_species_kegg)){
result_mat_kegg[i,j] = length(na.omit(intersect(as.character(all_species_kegg[,i]),as.character(all_species_kegg[,j]))))
}
}
colnames(result_mat_kegg) <- rownames(result_mat_kegg) <- colnames(all_species_kegg)
write.csv(result_mat_kegg,"all_species_up_down_mat_kegg.csv",quote=F)
result_up_mat_kegg <- result_mat[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
rownames(result_up_mat_kegg ) <- colnames(result_up_mat_kegg ) <- rownames(result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))])
result_down_mat_kegg <- result_mat[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))]
rownames(result_down_mat_kegg) <- colnames(result_down_mat_kegg) <- rownames(result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))])
write.csv(result_up_mat_kegg + result_down_mat_kegg,"all_species_mat_kegg.csv",quote=F)
write.csv(result_up_mat_kegg + result_down_mat_kegg,"all_species_mat_kegg.csv",quote=F)
result_down_mat_kegg
#############Intersect genes within 3 species
all_species_kegg <- qpcR:::cbind.na(hum_kegg,kegg,mouse_kegg)
all_species_kegg
result_mat_kegg  <- matrix(rep(0,1156),nrow=34,ncol=34)
for(i in 1:ncol(all_species_kegg)){
for(j in 1:ncol(all_species_kegg)){
result_mat_kegg[i,j] = length(na.omit(intersect(as.character(all_species_kegg[,i]),as.character(all_species_kegg[,j]))))
}
}
result_mat_kegg
colnames(result_mat_kegg) <- rownames(result_mat_kegg) <- colnames(all_species_kegg)
result_mat_kegg
write.csv(result_mat_kegg,"all_species_up_down_mat_kegg.csv",quote=F)
result_up_mat_kegg <- result_mat[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
rownames(result_up_mat_kegg ) <- colnames(result_up_mat_kegg ) <- rownames(result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))])
result_up_mat_kegg
result_up_mat_kegg <- result_mat[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
result_up_mat_kegg
result_mat[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
colnames(result_mat_kegg) <- rownames(result_mat_kegg) <- colnames(all_species_kegg)
result_mat_kegg
result_up_mat_kegg <- result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
rownames(result_up_mat_kegg ) <- colnames(result_up_mat_kegg ) <- rownames(result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))])
result_up_mat_kegg
rownames(result_down_mat_kegg) <- colnames(result_down_mat_kegg) <- rownames(result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))])
write.csv(result_up_mat_kegg + result_down_mat_kegg,"all_species_mat_kegg.csv",quote=F)
result_down_mat_kegg
result_up_mat_kegg
result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))]
result_down_mat_kegg <- result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))]
rownames(result_down_mat_kegg) <- colnames(result_down_mat_kegg) <- rownames(result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))])
esult_down_mat_kegg
result_down_mat_kegg
result_up_mat_kegg <- result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))]
rownames(result_up_mat_kegg ) <- colnames(result_up_mat_kegg ) <- rownames(result_mat_kegg[grep("up",rownames(result_mat_kegg)),grep("up",rownames(result_mat_kegg))])
result_down_mat_kegg <- result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))]
rownames(result_down_mat_kegg) <- colnames(result_down_mat_kegg) <- rownames(result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))])
result_up_mat_kegg
result_down_mat_kegg
rownames(result_down_mat_kegg) <- colnames(result_down_mat_kegg) <- rownames(result_mat_kegg[grep("down",rownames(result_mat_kegg)),grep("down",rownames(result_mat_kegg))])
write.csv(result_up_mat_kegg + result_down_mat_kegg,"all_species_mat_kegg.csv",quote=F)
setwd("/Volumes/Mac_Workplace/Mac_WorkSpace/leptin/multi-species-compare/result")
setwd("/Volumes/Mac_Workplace/Mac_WorkSpace/leptin/multi-species-compare/result")
library(readxl)
library(ggplot2)
library(reshape2)
#library(ggsci)
gran_theme <- theme_classic() +
theme(legend.title =element_blank(),legend.text = element_text( size = 10, face = "bold"),axis.title =element_text(size=10,face = "bold") ,axis.text=element_text(size=10))
gene <- read_excel("all_species_mat.xlsx")
gene_box <- gene[c(4:8),c(2:4)]
gene_box$rat <- gene$X__1[4:8]
gene_box_tran<-melt(
gene_box,                                      #待转换的数据集名称
id.vars=c("rat"),  #要保留的主字段
variable.name="Human",         #转换后的分类字段名称（维度）
value.name="Counts"            #转换后的度量值名称
)
gene_box_tran$rat <- factor(gene_box_tran$rat,levels = c("diff_w4","diff_w8","diff_w16","diff_w32","diff_w48"))
gene_box_tran$Counts <- as.numeric(gene_box_tran$Counts)
ggplot(gene_box_tran,aes(x=Human,y=Counts,fill=rat)) +
geom_bar(stat='identity',position=position_dodge()) +
gran_theme +
scale_fill_manual(values=c("LightGray","LightCyan","Cyan","DeepSkyBlue","Green1"))+
theme(legend.position="none")
ggsave("diff_genes_overlap.pdf",dpi=300,width = 3,height = 3)
pathway <- read_excel("all_species_mat_kegg.xlsx")
pathway_box <- pathway[c(4:8),c(2:4)]
pathway_box$rat <- pathway$X__1[4:8]
pathway_box_tran<-melt(
pathway_box,                                      #待转换的数据集名称
id.vars=c("rat"),  #要保留的主字段
variable.name="Human",         #转换后的分类字段名称（维度）
value.name="Counts"            #转换后的度量值名称
)
pathway_box_tran$rat <- factor(pathway_box_tran$rat,levels = c("w4","w8","w16","w32","w48"))
pathway_box_tran$Counts <- as.numeric(pathway_box_tran$Counts)
ggplot(pathway_box_tran,aes(x=Human,y=Counts,fill=rat)) +
geom_bar(stat='identity',position=position_dodge()) +
gran_theme +
scale_fill_manual(values=c("LightGray","LightCyan","Cyan","DeepSkyBlue","Green1"))+
theme(legend.position="none")
ggsave("diff_pathways_overlap.pdf",dpi=300,width = 3,height = 3)
